plugins {
    id "java"
    id "application"
}

group "com.example"
version "1.0-SNAPSHOT"

defaultTasks "build"

def djlVersion = getEnv("DJL_VERSION", "${djl_version}-SNAPSHOT")
def stagingRepo = getEnv("DJL_STAGING", null)

repositories {
    mavenCentral()
    mavenLocal()
    if (stagingRepo != null) {
        for (String repo : stagingRepo.split(",")) {
            maven {
                url "https://oss.sonatype.org/service/local/repositories/${repo}/content/"
            }
        }
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    implementation platform("ai.djl:bom:${djlVersion}")
    implementation "ai.djl:api"
    implementation "ai.djl:basicdataset"
    implementation "ai.djl:model-zoo"
    implementation "ai.djl.audio:audio"
    implementation "ai.djl.aws:aws-ai"
    implementation "ai.djl.fasttext:fasttext-engine"
    implementation "ai.djl.hadoop:hadoop"
    implementation "ai.djl.huggingface:tokenizers"
    implementation "ai.djl.ml.lightgbm:lightgbm"
    implementation "ai.djl.ml.xgboost:xgboost-gpu"
    implementation "ai.djl.ml.xgboost:xgboost"
    implementation "ai.djl.mxnet:mxnet-engine"
    implementation "ai.djl.mxnet:mxnet-model-zoo"
    implementation "ai.djl.mxnet:mxnet-native-cu112mkl::linux-x86_64"
    implementation "ai.djl.mxnet:mxnet-native-mkl::linux-x86_64"
    implementation "ai.djl.mxnet:mxnet-native-mkl::osx-x86_64"
    implementation "ai.djl.mxnet:mxnet-native-mkl::win-x86_64"
    implementation "ai.djl.onnxruntime:onnxruntime-engine"
    implementation "ai.djl.opencv:opencv"
    implementation "ai.djl.paddlepaddle:paddlepaddle-engine"
    implementation "ai.djl.paddlepaddle:paddlepaddle-model-zoo"
    implementation "ai.djl.paddlepaddle:paddlepaddle-native-cpu::linux-x86_64"
    implementation "ai.djl.paddlepaddle:paddlepaddle-native-cpu::osx-x86_64"
    implementation "ai.djl.paddlepaddle:paddlepaddle-native-cpu::win-x86_64"
    implementation "ai.djl.paddlepaddle:paddlepaddle-native-cu112::linux-x86_64"
    implementation "ai.djl.pytorch:pytorch-engine"
    implementation "ai.djl.pytorch:pytorch-jni"
    implementation "ai.djl.pytorch:pytorch-model-zoo"
    implementation "ai.djl.pytorch:pytorch-native-cpu-precxx11::linux-aarch64"
    implementation "ai.djl.pytorch:pytorch-native-cpu-precxx11::linux-x86_64"
    implementation "ai.djl.pytorch:pytorch-native-cpu::linux-x86_64"
    implementation "ai.djl.pytorch:pytorch-native-cpu::osx-aarch64"
    implementation "ai.djl.pytorch:pytorch-native-cpu::osx-x86_64"
    implementation "ai.djl.pytorch:pytorch-native-cpu::win-x86_64"
    implementation "ai.djl.pytorch:pytorch-native-cu117-precxx11::linux-x86_64"
    implementation "ai.djl.pytorch:pytorch-native-cu117::linux-x86_64"
    implementation "ai.djl.pytorch:pytorch-native-cu117::win-x86_64"
    implementation "ai.djl.sentencepiece:sentencepiece"
    implementation "ai.djl.spark:spark_2.12"
    implementation "ai.djl.tablesaw:tablesaw"
    implementation "ai.djl.tensorflow:tensorflow-api"
    implementation "ai.djl.tensorflow:tensorflow-engine"
    implementation "ai.djl.tensorflow:tensorflow-model-zoo"
    implementation "ai.djl.tensorflow:tensorflow-native-cpu::linux-x86_64"
    implementation "ai.djl.tensorflow:tensorflow-native-cpu::osx-x86_64"
    implementation "ai.djl.tensorflow:tensorflow-native-cpu::win-x86_64"
    implementation "ai.djl.tensorflow:tensorflow-native-cu113::linux-x86_64"
    implementation "ai.djl.tensorflow:tensorflow-native-cu113::win-x86_64"
    implementation "ai.djl.tensorrt:tensorrt"
    implementation "ai.djl.tflite:tflite-engine"
    implementation "ai.djl.tflite:tflite-native-cpu::linux-x86_64"
    implementation "ai.djl.tflite:tflite-native-cpu::osx-x86_64"
    implementation "ai.djl.timeseries:timeseries"
    implementation "com.microsoft.onnxruntime:onnxruntime"
    implementation "com.microsoft.onnxruntime:onnxruntime_gpu"

    if (System.getenv("FULL_RELEASE") != null) {
        implementation "ai.djl:serving"
        implementation "ai.djl.android:core"
        implementation "ai.djl.android:onnxruntime"
        implementation "ai.djl.android:pytorch-native"
        implementation "ai.djl.python:python"
    }
}

static def getEnv(String key, String defaultValue) {
    String value = System.getenv(key)
    return value == null || value.isEmpty() ? defaultValue : value
}
