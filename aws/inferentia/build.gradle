plugins {
    id "java"
    id "idea"
    id "application"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    implementation platform("ai.djl:bom:0.20.0")
    implementation "ai.djl:api"

    runtimeOnly "ai.djl.pytorch:pytorch-engine"
    // latest inf1 only support 1.12.1
    runtimeOnly "ai.djl.pytorch:pytorch-native-cpu-precxx11:1.12.1!!:linux-x86_64"
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_slf4j_version}"
}

configure(this) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    apply from: file("${rootProject.projectDir}/../../tools/gradle/formatter.gradle")
}

application {
    mainClass = System.getProperty("main", "com.example.inferentia.InferentiaDemo")
    applicationDefaultJvmArgs = ["-Xss2m"]
}

run {
    systemProperties System.getProperties()
    systemProperties.remove("user.dir")
    systemProperty("file.encoding", "UTF-8")
}

task benchmark(type: JavaExec) {
    systemProperties System.getProperties()
    systemProperties.remove("user.dir")
    systemProperty("file.encoding", "UTF-8")
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.example.inferentia.Benchmark"
}
tasks.distTar.enabled = false
