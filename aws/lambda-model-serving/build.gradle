plugins {
    id "java-library"
}

group "com.example"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    implementation platform("ai.djl:bom:${djl_version}")
    implementation "ai.djl.pytorch:pytorch-model-zoo"

    implementation "com.amazonaws:aws-lambda-java-core:1.2.1"

    runtimeOnly "org.slf4j:slf4j-simple:${slf4j_simple_version}"

    testImplementation "org.testng:testng:${testng_version}"
}

test {
    doFirst {
        jvmArgs = [
                '--add-opens', "java.base/jdk.internal.loader=ALL-UNNAMED"
        ]
    }

    useTestNG() {
        // suiteXmlFiles << new File(rootDir, "testng.xml") //This is how to add custom testng.xml
    }

    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

configure(this) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    apply from: file("${projectDir}/../../tools/gradle/formatter.gradle")
}

task buildZip(type: Zip, dependsOn: jar) {
    archiveFileName = getArchivesBaseName() + ".zip"
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}
build.dependsOn buildZip

task deploy(type: Exec, dependsOn: buildZip) {
    executable "./deploy.sh"
}
